<launch>
	<arg name="model" default="$(find myrobot_model)/urdf/mobrob_move.urdf"/>
	<arg name="gui" default="true" />
	<arg name="rvizconfig" default="$(find myrobot_model)/rviz/urdf.rviz" />

	<!--<param name="use_gui" value="$(arg gui)"/>-->

	

	<machine name="station" address="localhost" env-loader="/opt/ros/kinetic/env.sh" default="true"/>  	
	<machine name="mobrob" address="MOBROB" env-loader="/opt/ros/kinetic/robot_env.sh" user="ubuntu" password="mobrob123"/>
	
	<param name="robot_description" command="cat $(find myrobot_model)/urdf/mobrob_move.urdf" />
	
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" machine="station"/>
    	
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" machine="station"/>

	<!--<node machine="mobrob" pkg="turtlesim" type="turtle_teleop_key" name="testnode"/>-->	

  	
	<node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen" machine="mobrob">
		<param name="serial_port"         type="string" value="/dev/rplidar"/>
		<param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
		<!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
		<param name="frame_id"            type="string" value="laser"/>
		<param name="inverted"            type="bool"   value="false"/>
		<param name="angle_compensate"    type="bool"   value="true"/>
	</node>

	<node name="arduinonode" pkg="rosserial_python" type="serial_node.py" machine="mobrob">
		<param name="port" value="/dev/arduino" />
	</node>

	<node name="cameranode" pkg="usb_cam" type="usb_cam_node" machine="mobrob">
		<param name="video_device" value="/dev/video0" />
		<param name="image_width" value="1280" />
		<param name="image_height" value="720" />
		<param name="pixel_format" value="yuyv" />
		<remap from="image" to="/usb_cam/image_raw"/>
	</node>

	<node name="odom_converter" pkg="myrobot_model" type="odom_converter" machine="station"/>
	
	<!-- Gmapping -->
	<node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen" machine="station">
	    <param name="base_frame" value="base_link"/>
	    <param name="odom_frame" value="odom"/>
	    <param name="map_frame"  value="map"/>
	    <param name="map_update_interval" value="2.0"/>
	    <param name="maxUrange" value="3.0"/>
	    <param name="sigma" value="0.05"/>
	    <param name="kernelSize" value="1"/>
	    <param name="lstep" value="0.05"/>
	    <param name="astep" value="0.05"/>
	    <param name="iterations" value="5"/>
	    <param name="lsigma" value="0.075"/>
	    <param name="ogain" value="3.0"/>
	    <param name="lskip" value="0"/>
	    <param name="minimumScore" value="50"/>
	    <param name="srr" value="0.1"/>
	    <param name="srt" value="0.2"/>
	    <param name="str" value="0.1"/>
	    <param name="stt" value="0.2"/>
	    <param name="linearUpdate" value="1.0"/>
	    <param name="angularUpdate" value="0.2"/>
	    <param name="temporalUpdate" value="0.5"/>
	    <param name="resampleThreshold" value="0.5"/>
	    <param name="particles" value="100"/>
	    <param name="xmin" value="-10.0"/>
	    <param name="ymin" value="-10.0"/>
	    <param name="xmax" value="10.0"/>
	    <param name="ymax" value="10.0"/>
	    <param name="delta" value="0.05"/>
	    <param name="llsamplerange" value="0.01"/>
	    <param name="llsamplestep" value="0.01"/>
	    <param name="lasamplerange" value="0.005"/>
	    <param name="lasamplestep" value="0.005"/>
		<param name="message_notifier" value="DEBUG"/>
	</node>

	<node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_slam)/rviz/turtlebot3_gmapping.rviz"/>
</launch>
